{"version":3,"sources":["casalogo.svg","components/common/SearchBar.js","components/common/Header.js","helpers.js","config.js","components/common/Loading.js","components/list/Table.js","components/list/List.js","components/notfound/NotFound.js","components/detail/Detail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchQuery","handleSubmit","bind","assertThisInitialized","handleChange","event","preventDefault","s","props","history","push","concat","inputValue","target","value","setState","react_default","a","createElement","onSubmit","className","class","name","type","onChange","placeholder","aria-label","React","Component","withRouter","Header","Link","to","src","logo","height","alt","components_common_SearchBar","handleResponse","response","json","then","ok","Promise","reject","API_ROOT_URL","Loading","mostActive","renderChangePercent","scope","map","result","key","onClick","symbol","changePercent","List","loading","error","_this2","fetch","data","catch","errorMessage","percent","_this$state","components_common_Loading","list_Table","NotFound","Detail","news","peers","stocksSymbol","match","params","all","_ref","_ref2","slicedToArray","_ref3","_ref4","console","log","items","item","href","url","rel","headline","source","related","index","companyName","marketCap","latestPrice","ytdChange","sector","App","BrowserRouter","basename","process","common_Header","Switch","Route","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a76cd86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/casalogo.dabe3c86.svg\";","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            searchQuery: '',\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this)\n\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const s= this.state.searchQuery;\n        this.props.history.push(`/stock/${s}/quote`);\n\n    }\n\n    handleChange(event) {\n        const inputValue = event.target.value;\n\n        this.setState({ searchQuery: inputValue });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"Search\">\n                <span className=\"Search-icon\"><i class=\"fas fa-search\"></i></span>\n                <input className=\"Search-input\" name=\"searchQuery\" type=\"search\" onChange={this.handleChange} placeholder=\"Enter Stock Symbol\" aria-label=\"Search\" />\n            </form>  \n        );\n    }\n}\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport logo from '../../casalogo.svg';\n\nconst Header = () => {\n    return (\n      <div>\n          <nav className=\"navbar navbar-expand-sm mha-nav p-5\">\n              <Link to=\"/\">\n                <img src={logo} height=\"40\" alt=\"logo\" className=\"d-inline-block align-top\" />\n              </Link>\n              <SearchBar/>\n          </nav>\n      </div>\n    );\n}\n\nexport default Header;","/*\n* Fetch error helper\n* @param {object} response\n* */\nexport const handleResponse = (response) => {\n    return response.json().then(json => {\n        return response.ok ? json : Promise.reject(json);\n    });\n}","// In salt for prod\n/*\n*  API root URL\n*\n*/\nexport const API_ROOT_URL = 'https://api.iextrading.com/1.0';","import React from 'react';\nimport './Loading.css';\n\nconst Loading = () => {\n    return <div className=\"Loading\"/>;\n}\n\nexport default Loading;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport Proptypes from 'prop-types';\n\nconst Table = (props) => {\n    const {mostActive, renderChangePercent, history} = props;\n    return (\n        <div className=\"container card bg-dark\">\n            <div className=\"card-header text-info\"><h5>Most Active Stocks Right Now</h5></div>\n            <div className=\"card-body\">\n                <table className=\"table table-striped table-hover table-dark\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Latest Price</th>\n                        <th scope=\"col\">Sector</th>\n                        <th>Change Percent</th>\n                    </tr>\n                    </thead>\n\n                    <tbody>{mostActive.map((result) => (\n                        <tr key={result['companyName']}\n                        onClick={() => history.push(`/stock/${result.symbol}/quote`)}\n                        >\n                            <td>{result['companyName']}</td>\n                            <td>{result['latestPrice']}</td>\n                            <td>{result['sector']}</td>\n                            <td>{renderChangePercent(result.changePercent)}</td>\n                        </tr>\n                    ))}</tbody>\n                </table>\n            </div>\n        </div>\n    )\n};\n\nexport default withRouter(Table);\n","import React from 'react';\nimport {handleResponse} from \"../../helpers\";\nimport {API_ROOT_URL} from \"../../config\";\nimport Loading from \"../common/Loading\";\nimport Table from './Table';\n\nconst API_KEY_ALPHA = 'LIREEOH9D5ZW2BAC';\n// var symbol = data['Meta Data']['2. Symbol'];\n\nclass List extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            loading: false,\n            mostActive: [],\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({loading: true});\n        fetch(`${API_ROOT_URL}/stock/market/list/mostactive`)\n            .then(handleResponse)\n            .then((data) => {\n                this.setState({\n                    mostActive: data,\n                    loading: false });\n            })\n            .catch((error) => {\n\n                this.setState({\n                    error: error.errorMessage,\n                    loading: false\n                });\n            });\n    }\n\n    renderChangePercent(percent) {\n        if(percent>0) {\n            return <span className=\"percent-raised\">{percent}% &uarr;</span>\n        }else if (percent < 0) {\n            return <span className=\"percent-fallen\">{percent}% &darr;</span>\n        } else {\n            return <span>{percent}</span>\n        }\n    }\n\n    render() {\n        const { loading, error, mostActive } = this.state;\n\n        // render only loading component, if loading state is set to true\n        if (loading) {\n            return <div className=\"loading-container\"><Loading /></div>\n        }\n\n        // render only error message, if error occured while fetching data\n        if (error) {\n            return <div className=\"error\">{ error}</div>\n        }\n        return (\n            <Table\n                mostActive={mostActive}\n                renderChangePercent={this.renderChangePercent}\n            />\n        );\n    }\n}\n\nexport default List;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './NotFound.css';\n\nconst NotFound = () => {\n    return (\n        <div className=\"NotFound\">\n            <h1 className=\"NotFound-title\">Oops ! Page not found</h1>\n\n            <Link to=\"/\" className=\"NotFound-link\">Go to homepage</Link>\n        </div>\n    );\n}\n\nexport default NotFound;","import React from 'react';\nimport {API_ROOT_URL} from \"../../config\";\nimport Loading from '../common/Loading';\nimport {handleResponse} from \"../../helpers\";\nimport './Detail.css';\n\nclass Detail extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            result: [],\n            news: [{}],\n            peers: [],\n            loading: false,\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        const stocksSymbol = this.props.match.params.symbol;\n\n        this.setState({loading: true});\n\n        Promise.all([fetch(`${API_ROOT_URL}/stock/${stocksSymbol}/quote`),\n            fetch(`${API_ROOT_URL}/stock/${stocksSymbol}/news`),fetch(`${API_ROOT_URL}/stock/${stocksSymbol}/peers`)])\n            // .then(handleResponse)\n            .then( ([result,news,peers]) => Promise.all([result.json(),news.json(),peers.json()]))\n            .then(([result, news,peers]) => {\n                console.log(news);\n                this.setState({\n                    result: result,\n                    news: news,\n                    peers: peers,\n                    loading: false,\n                    error: null,\n                })\n            })\n\n    }\n\n    render() {\n        const {loading, error, result, news, peers } = this.state;\n\n        const items = this.state.news.map((item, key) =>\n            <a href={item.url} rel=\"noreferrer noopener\" target=\"_blank\">\n                <li className=\"list-group-item list-group-item-success\" key={item.headline}>{item.headline} - {item.source}</li></a>);\n\n        const related = this.state.peers.map((item, index) =>\n                <span className=\"badge badge-pill badge-info\" key={index}>{item}</span>);\n\n        // Render only loading component if loading state is set to True\n        if (loading) {\n            return <div className=\"loading-container\">\n                <Loading/>\n            </div>\n        }\n\n        // Render only error message, if error occured while fetching data\n        if (error) {\n            return <div className=\"error\">{error}</div>\n        }\n\n        return (\n            <div className=\"row\">\n            <div className=\"card bg-dark text-white m-3 col-md-4 mx-auto\">\n                <div className=\"card-header\"><h5>{result.companyName} ({result.symbol})</h5></div>\n                <div className=\"card-body\">\n                    <ul className=\"list-group\">\n                        <li className=\"list-group-item list-group-item-dark\"><b>Market Cap</b>: {result.marketCap}</li>\n                        <li className=\"list-group-item list-group-item-dark\"><b>Latest Price</b>: {result.latestPrice}</li>\n                        <li className=\"list-group-item list-group-item-dark\"><b>YTDChange</b>: {result.ytdChange}</li>\n                        <li className=\"list-group-item list-group-item-dark\"><b>Sector</b>: {result.sector}</li>\n                        <li className=\"list-group-item list-group-item-dark\"><b>Related ...</b>: {related}</li>\n                    </ul>\n                </div>\n            </div>\n\n            <div className=\"card bg-success text-white m-3 col-md-5 mx-auto\">\n            <div className=\"card-header\"><h5>News</h5></div>\n        <div className=\"card-body\">\n            <ul className=\"list-group\">{items}</ul>\n        </div>\n        </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Detail;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Header from './components/common/Header';\nimport List from './components/list/List';\nimport NotFound from './components/notfound/NotFound';\nimport Detail from './components/detail/Detail';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <Header/>\n\n                        <Switch>\n                            <Route path=\"/\" component={List} exact/>\n                            <Route path=\"/stock/:symbol/quote\" component={Detail} exact />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}