{"version":3,"sources":["casalogo.svg","components/common/SearchBar.js","components/common/Header.js","helpers.js","config.js","components/common/Loading.js","components/list/Table.js","components/list/List.js","components/notfound/NotFound.js","components/detail/Detail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchQuery","handleChange","bind","assertThisInitialized","event","preventDefault","inputValue","target","value","setState","react_default","a","createElement","name","onChange","React","Component","Header","className","Link","to","src","logo","height","alt","components_common_SearchBar","handleResponse","response","json","then","ok","Promise","reject","API_ROOT_URL","Loading","withRouter","props","mostActive","renderChangePercent","history","scope","map","result","key","onClick","push","concat","symbol","changePercent","List","loading","error","_this2","fetch","data","catch","errorMessage","percent","_this$state","components_common_Loading","list_Table","NotFound","Detail","news","peers","stocksSymbol","match","params","all","_ref","_ref2","slicedToArray","_ref3","_ref4","console","log","items","item","href","url","rel","headline","source","related","index","companyName","marketCap","latestPrice","ytdChange","sector","App","BrowserRouter","basename","process","common_Header","Switch","Route","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ea94e91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/casalogo.dabe3c86.svg\";","import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            searchQuery: '',\n        }\n\n        // this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this)\n\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    handleChange(event) {\n        const inputValue = event.target.value;\n\n        this.setState({ searchQuery: inputValue });\n    }\n\n    render() {\n        return (\n            <form>\n                <input name=\"searchQuery\" onChange={this.handleChange}/>\n            </form>  \n        );\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport logo from '../../casalogo.svg';\n\nconst Header = () => {\n    return (\n      <div>\n          <nav className=\"navbar navbar-expand-sm mha-nav p-5\">\n              <Link to=\"/\">\n                <img src={logo} height=\"40\" alt=\"logo\" className=\"d-inline-block align-top\" />\n              </Link>\n              <SearchBar/>\n          </nav>\n      </div>\n    );\n}\n\nexport default Header;","/*\n* Fetch error helper\n* @param {object} response\n* */\nexport const handleResponse = (response) => {\n    return response.json().then(json => {\n        return response.ok ? json : Promise.reject(json);\n    });\n}","// In salt for prod\n/*\n*  API root URL\n*\n*/\nexport const API_ROOT_URL = 'https://api.iextrading.com/1.0';","import React from 'react';\nimport './Loading.css';\n\nconst Loading = () => {\n    return <div className=\"Loading\"/>;\n}\n\nexport default Loading;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport Proptypes from 'prop-types';\n\nconst Table = (props) => {\n    const {mostActive, renderChangePercent, history} = props;\n    return (\n        <div className=\"container card bg-dark\">\n            <div className=\"card-header text-info\"><h5>Most Active Stocks Right Now</h5></div>\n            <div className=\"card-body\">\n                <table className=\"table table-striped table-hover table-dark\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Latest Price</th>\n                        <th scope=\"col\">Sector</th>\n                        <th>Change Percent</th>\n                    </tr>\n                    </thead>\n\n                    <tbody>{mostActive.map((result) => (\n                        <tr key={result['companyName']}\n                        onClick={() => history.push(`/stock/${result.symbol}/quote`)}\n                        >\n                            <td>{result['companyName']}</td>\n                            <td>{result['latestPrice']}</td>\n                            <td>{result['sector']}</td>\n                            <td>{renderChangePercent(result.changePercent)}</td>\n                        </tr>\n                    ))}</tbody>\n                </table>\n            </div>\n        </div>\n    )\n};\n\nexport default withRouter(Table);\n","import React from 'react';\nimport {handleResponse} from \"../../helpers\";\nimport {API_ROOT_URL} from \"../../config\";\nimport Loading from \"../common/Loading\";\nimport Table from './Table';\n\nconst API_KEY_ALPHA = 'LIREEOH9D5ZW2BAC';\n// var symbol = data['Meta Data']['2. Symbol'];\n\nclass List extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            loading: false,\n            mostActive: [],\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({loading: true});\n        fetch(`${API_ROOT_URL}/stock/market/list/mostactive`)\n            .then(handleResponse)\n            .then((data) => {\n                this.setState({\n                    mostActive: data,\n                    loading: false });\n            })\n            .catch((error) => {\n\n                this.setState({\n                    error: error.errorMessage,\n                    loading: false\n                });\n            });\n    }\n\n    renderChangePercent(percent) {\n        if(percent>0) {\n            return <span className=\"percent-raised\">{percent}% &uarr;</span>\n        }else if (percent < 0) {\n            return <span className=\"percent-fallen\">{percent}% &darr;</span>\n        } else {\n            return <span>{percent}</span>\n        }\n    }\n\n    render() {\n        const { loading, error, mostActive } = this.state;\n\n        // render only loading component, if loading state is set to true\n        if (loading) {\n            return <div className=\"loading-container\"><Loading /></div>\n        }\n\n        // render only error message, if error occured while fetching data\n        if (error) {\n            return <div className=\"error\">{ error}</div>\n        }\n        return (\n            <Table\n                mostActive={mostActive}\n                renderChangePercent={this.renderChangePercent}\n            />\n        );\n    }\n}\n\nexport default List;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './NotFound.css';\n\nconst NotFound = () => {\n    return (\n        <div className=\"NotFound\">\n            <h1 className=\"NotFound-title\">Oops ! Page not found</h1>\n\n            <Link to=\"/\" className=\"NotFound-link\">Go to homepage</Link>\n        </div>\n    );\n}\n\nexport default NotFound;","import React from 'react';\nimport {API_ROOT_URL} from \"../../config\";\nimport Loading from '../common/Loading';\nimport {handleResponse} from \"../../helpers\";\nimport './Detail.css';\n\nclass Detail extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            result: [],\n            news: [{}],\n            peers: [],\n            loading: false,\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        const stocksSymbol = this.props.match.params.symbol;\n\n        this.setState({loading: true});\n\n        Promise.all([fetch(`${API_ROOT_URL}/stock/${stocksSymbol}/quote`),\n            fetch(`${API_ROOT_URL}/stock/${stocksSymbol}/news`),fetch(`${API_ROOT_URL}/stock/${stocksSymbol}/peers`)])\n            // .then(handleResponse)\n            .then( ([result,news,peers]) => Promise.all([result.json(),news.json(),peers.json()]))\n            .then(([result, news,peers]) => {\n                console.log(news);\n                this.setState({\n                    result: result,\n                    news: news,\n                    peers: peers,\n                    loading: false,\n                    error: null,\n                })\n            })\n\n    }\n\n    render() {\n        const {loading, error, result, news, peers } = this.state;\n\n        const items = this.state.news.map((item, key) =>\n            <a href={item.url} rel=\"noreferrer noopener\" target=\"_blank\">\n                <li className=\"list-group-item list-group-item-success\" key={item.headline}>{item.headline} - {item.source}</li></a>);\n\n        const related = this.state.peers.map((item, index) =>\n                <span className=\"badge badge-pill badge-info\" key={index}>{item}</span>);\n\n        // Render only loading component if loading state is set to True\n        if (loading) {\n            return <div className=\"loading-container\">\n                <Loading/>\n            </div>\n        }\n\n        // Render only error message, if error occured while fetching data\n        if (error) {\n            return <div className=\"error\">{error}</div>\n        }\n\n        return (\n            <div className=\"row\">\n            <div className=\"card bg-dark text-white m-3 col-md-4 mx-auto\">\n                <div className=\"card-header\"><h5>{result.companyName} ({result.symbol})</h5></div>\n                <div className=\"card-body\">\n                    <ul className=\"list-group\">\n                        <li className=\"list-group-item list-group-item-dark\"><b>Market Cap</b>: {result.marketCap}</li>\n                        <li className=\"list-group-item list-group-item-dark\"><b>Latest Price</b>: {result.latestPrice}</li>\n                        <li className=\"list-group-item list-group-item-dark\"><b>YTDChange</b>: {result.ytdChange}</li>\n                        <li className=\"list-group-item list-group-item-dark\"><b>Sector</b>: {result.sector}</li>\n                        <li className=\"list-group-item list-group-item-dark\"><b>Related ...</b>: {related}</li>\n                    </ul>\n                </div>\n            </div>\n\n            <div className=\"card bg-success text-white m-3 col-md-5 mx-auto\">\n            <div className=\"card-header\"><h5>News</h5></div>\n        <div className=\"card-body\">\n            <ul className=\"list-group\">{items}</ul>\n        </div>\n        </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Detail;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Header from './components/common/Header';\nimport List from './components/list/List';\nimport NotFound from './components/notfound/NotFound';\nimport Detail from './components/detail/Detail';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <Header/>\n\n                        <Switch>\n                            <Route path=\"/\" component={List} exact/>\n                            <Route path=\"/stock/:symbol/quote\" component={Detail} exact />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}